class Alphabet {
  static alphabetPixel: Array<Array<any>> = [
    [[0, 1, 1, 0], [1, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 1], [1, 0, 0, 1]],  // A
    [[1, 1, 1, 0], [1, 0, 0, 1], [1, 1, 1, 0], [1, 0, 0, 1], [1, 1, 1, 0]],  // B
    [[0, 1, 1, 1], [1, 0, 0, 0], [1, 0, 0, 0], [1, 0, 0, 0], [0, 1, 1, 1]],  // C
    [[1, 1, 1, 0], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 0]],  // D
    [[1, 1, 1, 1], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 0, 0], [1, 1, 1, 1]],  // E
    [[1, 1, 1, 1], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 0, 0], [1, 0, 0, 0]],  // F
    [[0, 1, 1, 1], [1, 0, 0, 0], [1, 0, 1, 1], [1, 0, 0, 1], [0, 1, 1, 1]],  // G
    [[1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1], [1, 0, 0, 1], [1, 0, 0, 1]],  // H
    [[1], [1], [1], [1], [1]],  // I
    [[0, 0, 0, 1], [0, 0, 0, 1], [0, 0, 0, 1], [1, 0, 0, 1], [0, 1, 1, 0]],  // J
    [[1, 0, 0, 1], [1, 0, 1, 0], [1, 1, 0, 0], [1, 0, 1, 0], [1, 0, 0, 1]],  // K
    [[1, 0, 0], [1, 0, 0], [1, 0, 0], [1, 0, 0], [1, 1, 1]],  // L
    [[1, 0, 0, 0, 1], [1, 1, 0, 1, 1], [1, 0, 1, 0, 1], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1]],  // M
    [[1, 0, 0, 1], [1, 1, 0, 1], [1, 0, 1, 1], [1, 0, 0, 1], [1, 0, 0, 1]],  // N
    [[0, 1, 1, 0], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [0, 1, 1, 0]],  // O
    [[1, 1, 1, 0], [1, 0, 0, 1], [1, 1, 1, 0], [1, 0, 0, 0], [1, 0, 0, 0]],  // P
    [[0, 1, 1, 0], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 1, 1], [0, 1, 1, 1]],  // Q
    [[1, 1, 1, 0], [1, 0, 0, 1], [1, 1, 1, 0], [1, 0, 1, 0], [1, 0, 0, 1]],  // R
    [[0, 1, 1, 1], [1, 0, 0, 0], [0, 1, 1, 0], [0, 0, 0, 1], [1, 1, 1, 0]],  // S
    [[1, 1, 1], [0, 1, 0], [0, 1, 0], [0, 1, 0], [0, 1, 0]],  // T
    [[1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [1, 1, 1, 1]],  // U
    [[1, 0, 1], [1, 0, 1], [1, 0, 1], [1, 0, 1], [0, 1, 0]],  // V
    [[1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [1, 0, 0, 0, 1], [1, 0, 1, 0, 1], [0, 1, 0, 1, 0]],  // W
    [[1, 0, 1], [1, 0, 1], [0, 1, 0], [1, 0, 1], [1, 0, 1]],  // X
    [[1, 0, 1], [1, 0, 1], [1, 1, 1], [0, 1, 0], [0, 1, 0]],  // Y
    [[1, 1, 1, 1], [0, 0, 0, 1], [0, 0, 1, 0], [0, 1, 0, 0], [1, 1, 1, 1]], // Z
    [[1], [1], [1], [0], [1]],  // !
    [[1, 1, 0], [0, 0, 1], [1, 1, 0], [0, 0, 0], [1, 0, 0]], // ?
    [[0, 1, 1, 0], [1, 0, 0, 1], [1, 0, 0, 1], [1, 0, 0, 1], [0, 1, 1, 0]], // 0
    [[0, 1], [1, 1], [0, 1], [0, 1], [0, 1]], // 1
    [[0, 1, 1, 0], [1, 0, 0, 1], [0, 0, 1, 1], [0, 1, 0, 0], [0, 1, 1, 1]], // 2
    [[1, 1, 0], [0, 0, 1], [0, 1, 1], [0, 0, 1], [1, 1, 0]], // 3
    [[1, 0, 0, 0], [1, 0, 1, 0], [0, 1, 1, 1], [0, 0, 1, 0], [0, 0, 1, 0]], // 4
    [[1, 1, 1], [1, 0, 0], [1, 1, 0], [0, 0, 1], [1, 1, 1]], // 5
    [[0, 1, 1, 0], [1, 0, 0, 0], [1, 1, 1, 0], [1, 0, 0, 1], [0, 1, 1, 0]], // 6
    [[0, 1, 1, 0], [1, 0, 0, 1], [0, 0, 1, 0], [0, 1, 0, 0,], [1, 0, 0, 0]], // 7
    [[0, 1, 1, 0], [1, 0, 0, 1], [0, 1, 1, 0], [1, 0, 0, 1], [0, 1, 1, 0]], // 8
    [[0, 1, 1, 0], [1, 0, 0, 1], [0, 1, 1, 1], [0, 0, 0, 1], [0, 1, 1, 0]], // 9
    [[0, 0, 0], [0, 1, 0], [1, 1, 1], [0, 1, 0], [0, 0, 0]], // +
    [[0, 0], [0, 0], [1, 1], [0, 0], [0, 0]], // -
    [[0], [0], [0], [0], [1]], // .
    [[0], [0], [0], [0], [0]], // space
    [[0, 0], [0, 1], [1, 0], [0, 1], [0, 0]], // <
    [[0, 0], [1, 0], [0, 1], [1, 0], [0, 0]], // >
    [[0, 0, 0], [1, 0, 1], [0, 1, 0], [1, 0, 1], [0, 0, 0]], // *
    [[0, 0, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0], [0, 0, 0]], // /
    [[0, 1], [1, 0], [1, 0], [1, 0], [0, 1]], // (
    [[1, 0], [0, 1], [0, 1], [0, 1], [1, 0]], // )
    [[1, 1], [1, 0], [1, 0], [1, 0], [1, 1]], // [
    [[1, 1], [0, 1], [0, 1], [0, 1], [1, 1]], // ]
    [[0, 1, 1], [0, 1, 0], [1, 0, 0], [0, 1, 0], [0, 1, 1]], // {
    [[1, 1, 0], [0, 1, 0], [0, 0, 1], [0, 1, 0], [1, 1, 0]], // }
    [[0], [1], [0], [1], [0]]
  ];
  static alphabetChar: Array<string> = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ!?0123456789+-. <>*/()[]{}:'.split('');
  static alphabetZip: { [key: string]: Array<Array<any>>; } = Object.fromEntries(this.alphabetChar.map((k, i) => [k, this.alphabetPixel[i]]));
}


export default Alphabet;